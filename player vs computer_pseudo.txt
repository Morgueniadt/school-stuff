# DEFINE FUNCTION introMsgPvAi():

SET #     msg TO """

#      Welcome to Snake and Ladder Game.

#      

#          Rules:

#        1. Both player and Ai are at the starting position i.e 0

#           Take it IN turns to roll the dice. 

#           Move forward the number of spaces shown on the dice.

#        2. If you lands at the bottom of a ladder, you can move up to the top of the ladder.

#        3. If you lands on the head of a snake, you must slide down to the bottom of the snake.

#        4. The first player to get to the FINAL position is the winner.

#        5. Hit enter to roll the dice.

#      

# 

#      

#      """

#     OUTPUT(msg)

# DEFINE FUNCTION PvAiName():

SET #    PvAiname1 TO None

#    WHILE not PvAiname1:

SET #          PvAiname1 TO INPUT("please INPUT player one name :")

#          

#          OUTPUT("Ai is ready")

# 

SET #          PvAiName2 TO "Ai"

# 

#          OUTPUT("\nThis match will be played by Player 1", PvAiname1 , " and Player 2", PvAiName2)

#          RETURN PvAiname1, PvAiName2





DEFINE FUNCTION diceRoll(): 

    time.sleep(timeOut)

    SET diceValue TO random.randint(1, 6)

    OUTPUT("Its a " + str(diceValue))

    RETURN diceValue

    



DEFINE FUNCTION snakeBite(oldPos, currentPos, PvAiName):

    (snakeBite)

    OUTPUT("\n", PvAiName ," got bit by a snake and moved down from", str(oldPos)  ," to ", str(currentPos))

    

DEFINE FUNCTION ladderClimbed(oldPos, currentPos, PvAiName):

    (ladderClimbed)

    OUTPUT("\n", PvAiName ," found a ladder and climbed from", str(oldPos)  ," to ", str(currentPos))

    

DEFINE FUNCTION s_n_l(PvAiName,currentPos, diceValue): 

    time.sleep(timeOut)

    SET oldPos TO currentPos

    SET currentPos TO oldPos + diceValue 



    IF currentPos > finishGame:

        need= finishGame - oldPos

        OUTPUT(f"You need {need} to win this game. Keep trying.")

        RETURN oldPos

      

        

    OUTPUT(f"\n {PvAiName} moved to {currentPos} from {oldPos}")

    IF currentPos IN snakes:

        SET FinalValue TO snakes.get(currentPos)

        snakeBite(currentPos, FinalValue, PvAiName)

    

    ELSEIF currentPos IN ladders:

      SET FinalValue TO ladders.get(currentPos)

      ladderClimbed(currentPos, FinalValue, PvAiName)

     

    ELSE:

        SET FinalValue TO currentPos

        

    RETURN currentPos







DEFINE FUNCTION checkWin(PvAiName, position):

    time.sleep(timeOut)

    IF finishGame EQUALS position:

        OUTPUT("\n\n\nThats it.\n\n" + PvAiName + " won the game.")

        OUTPUT("Congratulations " + PvAiName)

        SET end_time TO time.time()

        SET time_lapsed TO end_time - stopwatch

        time_convert(time_lapsed)

        



        SET snakesNLadders TO [gameChoice,position,checkWin ,time_convert]



        SET with open("information.csv", "a", newline TO "") as file:

            SET writer TO csv.writer(file)

            writer.writerow(snakesNLadders)

                

            sys.exit(1)



DEFINE FUNCTION startPvAi():

    introMsgPvAi()

    time.sleep(introMessage)

    

    

    SET PvAiname1, PvAiName2 TO PvAiName()



    time.sleep(timeOut)

        

    SET PvAi1Position TO 0

    SET PvAi2Position TO 0



    WHILE True:

        time.sleep(timeOut)

        OUTPUT(PvAiname1, end= "")

        SET INPUT_1 TO INPUT("Hit the enter to roll dice: ") 

        OUTPUT("\nRolling dice...")

        SET diceValue TO diceRoll()

        time.sleep(timeOut)

        OUTPUT(PvAiname1 ," moving....")

        SET PvAi1Position TO s_n_l(PvAiname1, PvAi1Position, diceValue)

        checkWin(PvAiname1, PvAi1Position)



        OUTPUT(PvAiName2, end= "")

        OUTPUT("\nRolling dice...")

        SET diceValue TO diceRoll()

        time.sleep(timeOut)

        OUTPUT(PvAiName2 ," moving....")

        SET PvAi2Position TO s_n_l(PvAiName2, PvAi2Position, diceValue)

        checkWin(PvAiName2, PvAi2Position)